{
  "$defs": {
    "AIInferenceServiceConfig": {
      "description": "Configuration for AI inference services.\n\nThis class represents the configuration for an AI inference service component. It inherits all attributes\nfrom `ProvidableConfig`.",
      "properties": {
        "id": {
          "description": "The unique identifier for the registry instance.",
          "minLength": 1,
          "title": "Id",
          "type": "string"
        },
        "params": {
          "additionalProperties": true,
          "description": "Additional parameters for the registry instance configuration.",
          "title": "Params",
          "type": "object"
        },
        "provider_key": {
          "description": "The key identifying the provider for the registry instance.",
          "minLength": 1,
          "title": "Provider Key",
          "type": "string"
        }
      },
      "required": [
        "id",
        "provider_key"
      ],
      "title": "AIInferenceServiceConfig",
      "type": "object"
    },
    "FetcherConfig": {
      "description": "Configuration for data fetchers.\n\nThis class represents the configuration for a data fetcher component. It inherits all attributes\nfrom `ProvidableConfig`.",
      "properties": {
        "id": {
          "description": "The unique identifier for the registry instance.",
          "minLength": 1,
          "title": "Id",
          "type": "string"
        },
        "params": {
          "additionalProperties": true,
          "description": "Additional parameters for the registry instance configuration.",
          "title": "Params",
          "type": "object"
        },
        "provider_key": {
          "description": "The key identifying the provider for the registry instance.",
          "minLength": 1,
          "title": "Provider Key",
          "type": "string"
        }
      },
      "required": [
        "id",
        "provider_key"
      ],
      "title": "FetcherConfig",
      "type": "object"
    },
    "ModifierConfig": {
      "description": "Configuration for modifiers.\n\nThis class represents the configuration for a modifier component. It inherits all attributes\nfrom `ProvidableConfig`.",
      "properties": {
        "id": {
          "description": "The unique identifier for the registry instance.",
          "minLength": 1,
          "title": "Id",
          "type": "string"
        },
        "params": {
          "additionalProperties": true,
          "description": "Additional parameters for the registry instance configuration.",
          "title": "Params",
          "type": "object"
        },
        "provider_key": {
          "description": "The key identifying the provider for the registry instance.",
          "minLength": 1,
          "title": "Provider Key",
          "type": "string"
        }
      },
      "required": [
        "id",
        "provider_key"
      ],
      "title": "ModifierConfig",
      "type": "object"
    },
    "OpenTicketAIConfig": {
      "description": "Root configuration model for Open Ticket AI.\n\nAttributes:\n    system (SystemConfig): Configuration for the ticket system adapter.\n    fetchers (list[FetcherConfig]): List of data fetcher configurations. Must be non-empty.\n    data_preparers (list[PreparerConfig]): List of data preparer configurations. Must be non-empty.\n    ai_inference_services (list[AIInferenceServiceConfig]): List of AI inference service configurations. Must be non-empty.\n    modifiers (list[ModifierConfig]): List of modifier configurations. Must be non-empty.\n    pipelines (list[PipelineConfig]): List of pipeline configurations. Must be non-empty.",
      "properties": {
        "system": {
          "$ref": "#/$defs/SystemConfig"
        },
        "fetchers": {
          "items": {
            "$ref": "#/$defs/FetcherConfig"
          },
          "minItems": 1,
          "title": "Fetchers",
          "type": "array"
        },
        "data_preparers": {
          "items": {
            "$ref": "#/$defs/PreparerConfig"
          },
          "minItems": 1,
          "title": "Data Preparers",
          "type": "array"
        },
        "ai_inference_services": {
          "items": {
            "$ref": "#/$defs/AIInferenceServiceConfig"
          },
          "minItems": 1,
          "title": "Ai Inference Services",
          "type": "array"
        },
        "modifiers": {
          "items": {
            "$ref": "#/$defs/ModifierConfig"
          },
          "minItems": 1,
          "title": "Modifiers",
          "type": "array"
        },
        "pipelines": {
          "items": {
            "$ref": "#/$defs/PipelineConfig"
          },
          "minItems": 1,
          "title": "Pipelines",
          "type": "array"
        }
      },
      "required": [
        "system",
        "fetchers",
        "data_preparers",
        "ai_inference_services",
        "modifiers",
        "pipelines"
      ],
      "title": "OpenTicketAIConfig",
      "type": "object"
    },
    "PipelineConfig": {
      "description": "Configuration for a single pipeline workflow.\n\nAttributes:\n    schedule (SchedulerConfig): The scheduling configuration for this pipeline.\n    pipes (list[str]): Ordered list of all pipe component IDs to execute, starting with a fetcher.\n        The list must have at least one element.",
      "properties": {
        "id": {
          "description": "The unique identifier for the registry instance.",
          "minLength": 1,
          "title": "Id",
          "type": "string"
        },
        "params": {
          "additionalProperties": true,
          "description": "Additional parameters for the registry instance configuration.",
          "title": "Params",
          "type": "object"
        },
        "provider_key": {
          "description": "The key identifying the provider for the registry instance.",
          "minLength": 1,
          "title": "Provider Key",
          "type": "string"
        },
        "schedule": {
          "$ref": "#/$defs/SchedulerConfig"
        },
        "pipes": {
          "description": "Ordered list of all pipe component IDs to execute, starting with a fetcher.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "title": "Pipes",
          "type": "array"
        }
      },
      "required": [
        "id",
        "provider_key",
        "schedule",
        "pipes"
      ],
      "title": "PipelineConfig",
      "type": "object"
    },
    "PreparerConfig": {
      "description": "Configuration for data preparers.\n\nThis class represents the configuration for a data preparer component. It inherits all attributes\nfrom `ProvidableConfig`.",
      "properties": {
        "id": {
          "description": "The unique identifier for the registry instance.",
          "minLength": 1,
          "title": "Id",
          "type": "string"
        },
        "params": {
          "additionalProperties": true,
          "description": "Additional parameters for the registry instance configuration.",
          "title": "Params",
          "type": "object"
        },
        "provider_key": {
          "description": "The key identifying the provider for the registry instance.",
          "minLength": 1,
          "title": "Provider Key",
          "type": "string"
        }
      },
      "required": [
        "id",
        "provider_key"
      ],
      "title": "PreparerConfig",
      "type": "object"
    },
    "SchedulerConfig": {
      "description": "Configuration for scheduling recurring tasks.\n\nAttributes:\n    interval (int): The interval of time to wait between runs. Must be at least 1.\n    unit (str): The unit of time for the interval (e.g., 'minutes', 'hours'). Must be non-empty.",
      "properties": {
        "interval": {
          "minimum": 1,
          "title": "Interval",
          "type": "integer"
        },
        "unit": {
          "minLength": 1,
          "title": "Unit",
          "type": "string"
        }
      },
      "required": [
        "interval",
        "unit"
      ],
      "title": "SchedulerConfig",
      "type": "object"
    },
    "SystemConfig": {
      "description": "Configuration for the ticket system adapter.\n\nAttributes:\n    params (dict[str, Any]): A dictionary of parameters specific to the ticket system adapter.",
      "properties": {
        "id": {
          "description": "The unique identifier for the registry instance.",
          "minLength": 1,
          "title": "Id",
          "type": "string"
        },
        "params": {
          "additionalProperties": true,
          "title": "Params",
          "type": "object"
        },
        "provider_key": {
          "description": "The key identifying the provider for the registry instance.",
          "minLength": 1,
          "title": "Provider Key",
          "type": "string"
        }
      },
      "required": [
        "id",
        "provider_key"
      ],
      "title": "SystemConfig",
      "type": "object"
    }
  },
  "description": "Wrapper model used for schema generation.\n\nThis class serves as a container for the main configuration model of the OpenTicketAI system.\nIt is designed to be used for generating JSON schema representations of the configuration.\n\nAttributes:\n    open_ticket_ai (OpenTicketAIConfig): The main configuration object containing all\n        settings and parameters for the OpenTicketAI system.",
  "properties": {
    "open_ticket_ai": {
      "$ref": "#/$defs/OpenTicketAIConfig"
    }
  },
  "required": [
    "open_ticket_ai"
  ],
  "title": "RootConfig",
  "type": "object"
}
