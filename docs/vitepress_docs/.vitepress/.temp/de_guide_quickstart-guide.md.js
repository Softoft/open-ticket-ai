import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Installation und Nutzung von ATC","description":"Installieren Sie ATC auf Ihrem Server und nutzen Sie die API zur automatisierten Klassifizierung von Support-Tickets.","frontmatter":{"title":"Installation und Nutzung von ATC","description":"Installieren Sie ATC auf Ihrem Server und nutzen Sie die API zur automatisierten Klassifizierung von Support-Tickets."},"headers":[],"relativePath":"de/guide/quickstart-guide.md","filePath":"de/guide/quickstart-guide.md"}');
const _sfc_main = { name: "de/guide/quickstart-guide.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><hr><h1 id="installation-von-atc" tabindex="-1">Installation von ATC <a class="header-anchor" href="#installation-von-atc" aria-label="Permalink to &quot;Installation von ATC&quot;">​</a></h1><p>ATC kann einfach mit Docker auf Ihrem Server installiert werden. Führen Sie die folgenden Schritte aus, um die Installation durchzuführen:</p><h2 id="schritt-1-docker-installieren" tabindex="-1">Schritt 1: Docker installieren <a class="header-anchor" href="#schritt-1-docker-installieren" aria-label="Permalink to &quot;Schritt 1: Docker installieren&quot;">​</a></h2><p>Zuerst müssen Sie Docker auf Ihrem Server installieren. Führen Sie die folgenden Befehle aus, um Docker zu installieren:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">sudo</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> apt-get</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> update</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">sudo</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> apt-get</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> install</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> docker-ce</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> docker-ce-cli</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> containerd.io</span></span></code></pre></div><h2 id="schritt-2-den-atc-container-ausfuhren" tabindex="-1">Schritt 2: Den ATC-Container ausführen <a class="header-anchor" href="#schritt-2-den-atc-container-ausfuhren" aria-label="Permalink to &quot;Schritt 2: Den ATC-Container ausführen&quot;">​</a></h2><p>Nachdem Docker installiert ist, können Sie den ATC-Container ausführen. Verwenden Sie den folgenden Befehl, um den Container zu starten:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">docker</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> run</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -d</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -p</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> 8080:80</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> your-docker-repo/atc:latest</span></span></code></pre></div><p>Dieser Befehl lädt das neueste ATC Docker-Image aus Ihrem Repository und startet es auf Port 8080.</p><h1 id="nutzung-der-atc-api" tabindex="-1">Nutzung der ATC-API <a class="header-anchor" href="#nutzung-der-atc-api" aria-label="Permalink to &quot;Nutzung der ATC-API&quot;">​</a></h1><p>Nach der Installation haben Sie HTTP-REST-Zugriff auf die ATC-API. Hier sind einige grundlegende Befehle zur Nutzung der API:</p><h2 id="senden-von-trainingsdaten" tabindex="-1">Senden von Trainingsdaten <a class="header-anchor" href="#senden-von-trainingsdaten" aria-label="Permalink to &quot;Senden von Trainingsdaten&quot;">​</a></h2><p>Um Trainingsdaten oder eine CSV-Datei an die ATC-REST-API zu senden, verwenden Sie den folgenden Befehl:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">curl</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -X</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> POST</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> http://your-server:8080/api/train</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> \\</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">     -H</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;Content-Type: text/csv&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> \\</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">     --data-binary</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> @yourfile.csv</span></span></code></pre></div><p>Dieser Befehl sendet die Datei <code>yourfile.csv</code> an die API, um sie für das Training zu verwenden.</p><h2 id="starten-des-trainings" tabindex="-1">Starten des Trainings <a class="header-anchor" href="#starten-des-trainings" aria-label="Permalink to &quot;Starten des Trainings&quot;">​</a></h2><p>Um das Training des Modells zu starten, verwenden Sie diesen Befehl:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">curl</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -X</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> POST</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> http://your-server:8080/api/start-training</span></span></code></pre></div><p>Dieser Befehl startet den Trainingsprozess basierend auf den zuvor gesendeten Daten.</p><h2 id="klassifizieren-von-tickets" tabindex="-1">Klassifizieren von Tickets <a class="header-anchor" href="#klassifizieren-von-tickets" aria-label="Permalink to &quot;Klassifizieren von Tickets&quot;">​</a></h2><p>Nach erfolgreichem Training können Sie Ticketdaten zur Klassifizierung an die API senden und die entsprechenden Labels erhalten:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">curl</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> -X</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> POST</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> http://your-server:8080/api/classify</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> \\</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">     -H</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &quot;Content-Type: application/json&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> \\</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">     -d</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> &#39;{&quot;ticket_data&quot;: &quot;Your ticket content&quot;}&#39;</span></span></code></pre></div><p>Dieser Befehl sendet den Ticketinhalt zur Klassifizierung und gibt die Klassifizierungs-Labels zurück.</p><h1 id="zusammenfassung" tabindex="-1">Zusammenfassung <a class="header-anchor" href="#zusammenfassung" aria-label="Permalink to &quot;Zusammenfassung&quot;">​</a></h1><p>Mit diesen Schritten können Sie ATC auf Ihrem Server installieren und die grundlegenden API-Funktionen nutzen. ATC bietet eine leistungsstarke, flexible Lösung für die automatisierte Klassifizierung von Support-Tickets, die einfach zu installieren und zu verwenden ist.</p><p>Dieser Abschnitt beschreibt die Installation von ATC und die grundlegenden API-Befehle im Detail. Sie können ihn anpassen und erweitern, um zusätzliche Informationen oder spezifische Anweisungen aufzunehmen.</p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("de/guide/quickstart-guide.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const quickstartGuide = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  quickstartGuide as default
};
